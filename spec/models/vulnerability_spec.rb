require 'rails_helper'

RSpec.describe Vulnerability, type: :model do
  before { create(:vulnerability) }

  describe 'relations' do
    it { is_expected.to(belong_to(:user)) }
    it { is_expected.to(have_many(:vulnerability_history).dependent(:destroy)) }
  end

  describe 'Enums' do
    it { is_expected.to(define_enum_for(:impact).with_values(%i[low medium high])) }
    it { is_expected.to(define_enum_for(:status).with_values(%i[identified being_analyzed fixed])) }
  end

  describe 'validations' do
    it { is_expected.to(validate_presence_of(:name)) }
    it { is_expected.to(validate_presence_of(:status)) }
    it { is_expected.to(validate_presence_of(:user)) }
  end

  describe '#after_commit' do
    subject { Vulnerability.first }

    context 'Should change VulnerabilityHistory' do
      it 'Should add one more after creation' do
        expect { create(:vulnerability) }.to change { VulnerabilityHistory.count }.by(1)
      end

      it 'Should add one more after updating' do
        vulnerability_params = { status: 2 }
        expect { subject.update(vulnerability_params) }.to change { VulnerabilityHistory.count }.by(1)
      end
    end

    context 'Should not change vulnerability history' do
      it 'Should not add one more after creation' do
        vulnerability_params = { name: 'Other name' }
        expect { subject.update(vulnerability_params) }.to change { VulnerabilityHistory.count }.by(0)
      end
    end
  end
end
